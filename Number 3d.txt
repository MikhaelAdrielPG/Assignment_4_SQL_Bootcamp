3d. sama seperti 3c, tapi tetapi dijabarkan siapa-siapa saja yang di rentang nilai tersebut, dibikin dalam string panjang dengan pemisah tanda koma saja.

WITH average_table AS (
    SELECT p.participant_id, p.name, COALESCE(AVG(s.score), 0) AS average_score
    FROM participants p
    LEFT JOIN scores s ON p.participant_id = s.participant_id
    GROUP BY p.participant_id, p.name
    ORDER BY p.participant_id ASC
),
ScoreRanges AS (
    SELECT '0-20' AS score_range
    UNION SELECT '20-40'
    UNION SELECT '40-60'
    UNION SELECT '60-80'
    UNION SELECT '80-100'
    UNION SELECT 'Tidak Ada Nilai'
)
SELECT
    sr.score_range,
    COALESCE(string_agg(DISTINCT at.name, ', '), 'Tidak Ada Peserta') AS participants
FROM ScoreRanges sr
LEFT JOIN average_table at ON (
    (sr.score_range = '0-20' AND at.average_score >= 0 AND at.average_score < 20) OR
    (sr.score_range = '20-40' AND at.average_score >= 20 AND at.average_score < 40) OR
    (sr.score_range = '40-60' AND at.average_score >= 40 AND at.average_score < 60) OR
    (sr.score_range = '60-80' AND at.average_score >= 60 AND at.average_score < 80) OR
    (sr.score_range = '80-100' AND at.average_score >= 80) OR
    (sr.score_range = 'Tidak Ada Nilai' AND at.average_score < 0)
)
GROUP BY sr.score_range
ORDER BY sr.score_range;
